{"version":3,"sources":["components/todoItem.js","components/todoList.js","components/todoForm.js","components/app.js","index.js"],"names":["TodoItem","onClickClose","index","_this","props","removeItem","onClickDone","markTodoDone","_this$props","this","done","value","react_default","a","createElement","className","aria-checked","name","onClick","onKeyPress","role","tabIndex","type","React","Component","TodoList","tasks","todoItems","map","item","todoItem","key","TodoForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","preventDefault","newItemValue","itemName","current","addItem","form","reset","createRef","focus","ref","htmlFor","id","placeholder","App","fetchLocalStorage","setState","JSON","parse","localStorage","getItem","saveToLocalStorage","dataToStore","stringify","state","setItem","unshift","length","itemIndex","splice","todo","push","todoForm","todoList","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.46c35911.chunk.js","sourcesContent":["import React from \"react\"\n\nclass TodoItem extends React.Component {\n\n  onClickClose = () => {\n    const { index } = this.props\n    this.props.removeItem(index)\n  }\n  onClickDone = () => {\n    const { index } = this.props\n    this.props.markTodoDone(index)\n  }\n\n  render() {\n    const { done, value } = this.props\n\n    return (\n      <li className=\"list-group-item\">\n        <div className={done ? \"done\" : \"not-done\"}>\n          <div\n            aria-checked={done}\n            className=\"item-check\"\n            name=\"check-item\"\n            onClick={this.onClickDone}\n            onKeyPress={this.onClickDone}\n            role=\"checkbox\">\n            <span className=\"checkbox\" tabIndex=\"0\" />\n            <p className=\"item-name\">{value}</p>\n          </div>\n          <button type=\"button\" className=\"close\" onClick={this.onClickClose}>&times;</button>\n        </div>\n      </li>\n    )\n  }\n\n}\n\nexport default TodoItem\n","import React from \"react\"\nimport TodoItem from \"./todoItem\"\n\nclass TodoList extends React.Component {\n\n  render() {\n    const tasks = this.props.todoItems.map((item, index) => {\n      return (\n        <TodoItem\n          done={item.done}\n          index={index}\n          key={item.value}\n          markTodoDone={this.props.markTodoDone}\n          removeItem={this.props.removeItem}\n          value={item.value} />\n      )\n    })\n    return (\n      <ul className=\"list-group\">{tasks}</ul>\n    )\n  }\n\n}\n\nexport default TodoList\n","import React from \"react\"\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.itemName = React.createRef()\n    this.form = React.createRef()\n  }\n\n  componentDidMount() {\n    this.itemName.current.focus()\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    const newItemValue = this.itemName.current.value\n\n    if (newItemValue) {\n      this.props.addItem({ newItemValue })\n      this.form.current.reset()\n    }\n  }\n\n  render() {\n    return (\n      <form\n        className=\"todo-form\"\n        onSubmit={this.onSubmit}\n        ref={this.form}>\n        <label htmlFor=\"add-task\" className=\"screen-reader-only\">\n          Add a new task to the list\n        </label>\n        <input\n          className=\"form-input\"\n          id=\"add-task\"\n          ref={this.itemName}\n          placeholder=\"New task...\"\n          type=\"text\" />\n        <button\n          className=\"submit-button\"\n          type=\"submit\">\n          Add\n        </button>\n      </form>\n    )\n  }\n\n}\n\nexport default TodoForm\n","import React from \"react\"\nimport TodoList from \"./todoList\"\nimport TodoForm from \"./todoForm\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      todoItems: []\n    }\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"storedTodoList\")) {\n      this.fetchLocalStorage()\n    }\n  }\n\n  fetchLocalStorage = () => {\n    this.setState({\n      todoItems: JSON.parse(localStorage.getItem(\"storedTodoList\"))\n    })\n  }\n\n  saveToLocalStorage = () => {\n    const dataToStore = JSON.stringify(this.state.todoItems)\n    localStorage.setItem(\"storedTodoList\", dataToStore)\n  }\n\n  addItem = (todoItem) => {\n    const { todoItems } = this.state\n    todoItems.unshift({\n      index: todoItems.length + 1,\n      value: todoItem.newItemValue,\n      done: false\n    })\n    this.setState({ todoItems }, this.saveToLocalStorage)\n  }\n\n  removeItem = (itemIndex) => {\n    const { todoItems } = this.state\n    todoItems.splice(itemIndex, 1)\n    this.setState({ todoItems }, this.saveToLocalStorage)\n  }\n\n  markTodoDone = (itemIndex) => {\n    const { todoItems } = this.state\n    const todo = todoItems[itemIndex]\n    todoItems.splice(itemIndex, 1)\n    todo.done = !todo.done\n    if (todo.done) {\n      todoItems.push(todo)\n    } else {\n      todoItems.unshift(todo)\n    }\n    this.setState({ todoItems }, this.saveToLocalStorage)\n  }\n\n  render() {\n    const { todoItems } = this.state\n\n    return (\n      <div className=\"page-wrapper\">\n        <TodoForm addItem={this.addItem} />\n        {(!this.state.todoItems.length) && <div className=\"no-tasks-message\"><p>What do you have to do today?</p></div>}\n        <TodoList\n          removeItem={this.removeItem}\n          markTodoDone={this.markTodoDone}\n          todoItems={todoItems} />\n      </div>\n    )\n  }\n\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/app\"\nimport \"./index.scss\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}